[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "In this two-day course, you‚Äôll learn valuable techniques for establishing a solid foundation with dependency management via renv and organizing the code base of your app using modules and package infrastructure. We will also highlight ways to integrate a Shiny app with other services such as APIs and connections to databases since for many production-grade applications, ‚Äúit‚Äôs never just Shiny.‚Äù Throughout the workshop, students will build upon practical Shiny apps inspired by real-life projects illustrating user-interface improvements, efficient reactive programming, streamlined testing of backend and frontend components, intuitive debugging approaches, and more.\nThis workshop is for the Shiny developer who has entered this stage of their application development journey. The user is ready to learn how essential workflows, best practices, and the expanding community of Shiny-related packages can help them climb the ladder of Shiny development."
  },
  {
    "objectID": "about.html#is-this-course-for-me",
    "href": "about.html#is-this-course-for-me",
    "title": "About",
    "section": "Is this course for me ?",
    "text": "Is this course for me ?\nThis workshop will be appropriate for attendees who answer yes to these questions:\n\nHave you built successful proof-of-concept (POC) Shiny apps and want to take them to the next level for production use?\nDo you want to leverage best practices for integrating your Shiny app with other languages or services?\nDo you want to construct Shiny apps with new functionality either from the vast community of Shiny extensions or building your own customizations?"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Building Production-Quality Shiny Applications",
    "section": "",
    "text": "üóìÔ∏è July 25 and 26, 2022\n‚è∞ 09:00 - 17:00\nüè® National Harbor 2\n‚úçÔ∏è Click here to register"
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "Building Production-Quality Shiny Applications",
    "section": "Overview",
    "text": "Overview\n\n    \n\n\nShiny empowers R users to create innovative web applications, without requiring substantial expertise in web development frameworks to get up and running. The positive impact of Shiny in data science workflows across academia and a variety of industries is well-known and growing by the year. It is quite common for an early prototype of a Shiny app to generate tremendous excitement for key stakeholders and decision makers, often leading to requests for enhancements and ultimately be included in a production pipeline or process. The road to meeting this goal is challenging, especially for data scientists and statisticians not accustomed to software development!"
  },
  {
    "objectID": "index.html#logistics",
    "href": "index.html#logistics",
    "title": "Building Production-Quality Shiny Applications",
    "section": "Logistics",
    "text": "Logistics\nEach day of the workshop will start at 9 AM and end at 5 PM, with multiple coffee breaks and a lunch break throughout. All materials for the course will be viewable online at shinyprod.com and hosted on GitHub at github.com/rstudio-conf-2022/shiny-prod-apps. We also have a discussion board within the GitHub repository available for collaboration on questions and issues. For real-time messaging, we will be using a specific channel within the rstudio::conf(2022) Discord. Additional details for onboarding will be sent prior to the workshop."
  },
  {
    "objectID": "index.html#assumptions",
    "href": "index.html#assumptions",
    "title": "Building Production-Quality Shiny Applications",
    "section": "Assumptions",
    "text": "Assumptions\nThis workshop assumes you have intermediate knowledge of Shiny application development. Specifically, that you have basic familiarity with binding inputs to outputs and application layout. If you consider yourself a beginner with Shiny, the material in this workshop may be difficult to follow during the two days. If you intended to enroll in a workshop geared towards an introduction to Shiny, please contact RStudio to see if you can switch to the Getting Started with Shiny workshop led by Colin Rundel.\nAlthough Shiny is certainly the main focus of this workshop, we will be leveraging other capabilities of R in the materials and example applications:\n\nWe will be using packages from the tidyverse to assist with data munging and processing. The majority of example code and exercises will provide the necessary code, but if you wish to make modifications we recommend R for Data Science as a great reference for becoming familiar with the tidyverse.\nIn certain situations the Shiny applications we create will leverage APIs deployed via the {plumber} package. You won‚Äôt be expected to create APIs from scratch in the workshop, but you are welcome to visit the package website to learn more about how APIs are created with plumber. To invoke the APIs from Shiny, we will leverage the {httr2} package."
  },
  {
    "objectID": "index.html#prework-setup",
    "href": "index.html#prework-setup",
    "title": "Building Production-Quality Shiny Applications",
    "section": "Prework & Setup",
    "text": "Prework & Setup\nYou can find complete details on the required pre-work and setup instructions at the setup tab."
  },
  {
    "objectID": "index.html#meet-the-workshop-team",
    "href": "index.html#meet-the-workshop-team",
    "title": "Building Production-Quality Shiny Applications",
    "section": "Meet the Workshop Team",
    "text": "Meet the Workshop Team\n\nInstructor\n Eric Nantz is a director within the statistical innovation center at Eli Lilly and Company, creating analytical pipelines and capabilities of advanced statistical methodologies for clinical design used in multiple phases of development. Outside of his day job, Eric is passionate about connecting with and showcasing the brilliant R community in multiple ways. You may recognize his voice from the R-Podcast that he launched in 2012. Eric is also the creator of the Shiny Developer Series where he interviews authors of Shiny-related packages and practitioners developing applications, as well as sharing his own R and Shiny adventures via livestreams on his Twitch channel. In addition, Eric is a curator for the RWeekly project and co-host of the RWeekly Highlights podcast which accompanies every issue.\n\n\nTeaching Assistants\n\nTanya Cashorali is the founder of TCB Analytics, a boutique data and analytics consultancy. After graduating from Northeastern University with dual Computer Science and Biology degrees, Tanya started her career in the data-rich field of bioinformatics in the early 2000s. The next decade of Tanya‚Äôs career included more commercial use cases for data science and analytics. Tanya also hosts a world-wide community network of over 500 data enthusiasts, has helped universities launch data science programs, and is a frequent speaker at tech conferences.\n\nIan Dinnie‚Äôs background is in social science. Prior to joining RStudio‚Äôs customer success team, Ian worked for a non-profit economic and public policy consulting company based in Massachusetts, where he worked on projects primarily regarding economic impact analysis, demography, and housing policy. During his time there, he developed a shiny app that displayed enrollment projections for the state‚Äôs public universities and community colleges.\n\nAaron Jacobs is a Software Engineer at RStudio, working on their pro products. He is a longtime member of the R community and is mostly known for his public work on using R in production.\n   \n\nDerrick Kearney is a member of RStudio‚Äôs Quality team. He is intentionally curious and appreciates software that works as intended.\n\nNick Strayer is a software engineer on the Shiny team at RStudio. Nick has been at the forefront of telling powerful stories through data analyses and visualization, such as in his previous roles at the New York Times and the Johns Hopkins Data Science Lab. He has authored many R packages leveraging the power of javascript within R & Shiny, such as shinysense and manhattanPlotr.\n\nAndrie De Vries started using R in 2009 for market research statistics. He is a regular contributor to StackOverflow and co-author of ‚ÄúR for Dummies‚Äù. He contributed several R packages to CRAN, including miniCRAN, checkpoint, ggdendro, sss, and surveydata, and regularly speaks at industry events and R user groups. He is a qualified yoga teacher, and continues to study yoga therapy annually in Chennai, India."
  },
  {
    "objectID": "materials/d1-01-welcome/ex-0.html",
    "href": "materials/d1-01-welcome/ex-0.html",
    "title": "Application Deployment using {shinyprod}",
    "section": "",
    "text": "Open the application file app.R contained in the ex-0 directory. Verify it works correctly by clicing Run App inside RStudio.\nDeploy the application by either selecting the Deploy Shiny App RStudio Addin or by running this function within the R console: shinyprod::shinyprod_deploy()\nYou should see two URLs displayed in the R console upon successful deployment. Open new tabs in your browser for each of them and verify that the application was deployed under your account."
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#welcome-to-rstudioconf2022",
    "href": "materials/d1-01-welcome/index.html#welcome-to-rstudioconf2022",
    "title": "Welcome!",
    "section": "Welcome to rstudio::conf(2022)!",
    "text": "Welcome to rstudio::conf(2022)!"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#conference-logistics",
    "href": "materials/d1-01-welcome/index.html#conference-logistics",
    "title": "Welcome!",
    "section": "Conference Logistics",
    "text": "Conference Logistics\n\n\nIdentify the exits closes to you in case of emergency\nGender neutral bathrooms located near National Harbor Rooms\nLactation room located at Potomac Dressing Room\nA meditation room is available at National Harbor 9 (Open 8 AM - 5 PM).\nPlease do not photograph anyone wearing red lanyards"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#workshop-policies",
    "href": "materials/d1-01-welcome/index.html#workshop-policies",
    "title": "Welcome!",
    "section": "Workshop Policies",
    "text": "Workshop Policies\n\n\n\nPlease review the rstudio::conf Code of Conduct & COVID Policy that applies to all workshops.\n\nRStudio requires that you wear a mask that fully covers your mouth and nose at all times in all public spaces.\nWe strongly recommend that you use a correctly fitted N95, KN95, or similar particulate filtering mask; we will have a limited supply available upon request.\n\nIssues can be addressed in following ways:\n\nIn person: Contact any rstudio::conf staff member, identifiable by their staff t-shirt shirt, or visit the conference registration desk.\nBy email: Send a message to conf@rstudio.com; event organizers will respond promptly.\nBy phone: call 844‚Äî448‚Äî1212"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#meet-the-team",
    "href": "materials/d1-01-welcome/index.html#meet-the-team",
    "title": "Welcome!",
    "section": "Meet the Team!",
    "text": "Meet the Team!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nshinyprod.com/#meet-the-workshop-team"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#your-turn",
    "href": "materials/d1-01-welcome/index.html#your-turn",
    "title": "Welcome!",
    "section": "Your Turn",
    "text": "Your Turn\nIntroduce yourself to your neighbor(s)\nWhat does production-quality mean to you?\n\n\n\n02:00"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#about-those-post-its",
    "href": "materials/d1-01-welcome/index.html#about-those-post-its",
    "title": "Welcome!",
    "section": "About those post-its",
    "text": "About those post-its\n\n\n\n    \n        Done with activity\n    \n\n\n\n    \n        I'd like help"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#power-on-setup",
    "href": "materials/d1-01-welcome/index.html#power-on-setup",
    "title": "Welcome!",
    "section": "Power-On (Setup)",
    "text": "Power-On (Setup)\nFollow Setup Procedure to connect with the workshop resources:\n\nRStudio Connect\nRStudio Cloud\nAccount Integrations"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#many-users",
    "href": "materials/d1-01-welcome/index.html#many-users",
    "title": "Welcome!",
    "section": "Many Users",
    "text": "Many Users"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#high-profile-situations",
    "href": "materials/d1-01-welcome/index.html#high-profile-situations",
    "title": "Welcome!",
    "section": "High-Profile Situations",
    "text": "High-Profile Situations"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#part-of-a-critical-pipeline",
    "href": "materials/d1-01-welcome/index.html#part-of-a-critical-pipeline",
    "title": "Welcome!",
    "section": "Part of a Critical Pipeline",
    "text": "Part of a Critical Pipeline"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#the-journey-ahead",
    "href": "materials/d1-01-welcome/index.html#the-journey-ahead",
    "title": "Welcome!",
    "section": "The Journey Ahead",
    "text": "The Journey Ahead\n\nProduction has more than one meaning for Shiny apps\n\n\nThe tooling & principles discussed in this workshop will guide you to the destination"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#section",
    "href": "materials/d1-01-welcome/index.html#section",
    "title": "Welcome!",
    "section": "",
    "text": "Play this video as background in slide https://player.vimeo.com/video/652518341?background=1\nThe Metropolitan Museum of Art (aka the MET) was founded in 1870\nTwo locations in New York\nOver 5,000 years of art from around the world\nWhile we can‚Äôt visit the museum ourselves right now, we have another way ‚Ä¶"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#the-digital-met-collection",
    "href": "materials/d1-01-welcome/index.html#the-digital-met-collection",
    "title": "Welcome!",
    "section": "The (Digital) MET Collection",
    "text": "The (Digital) MET Collection\n\n\n\n\nOver 112,000 works across 17 collection departments\nAPI access launched in 2018\nMetadata associated with each piece\nAugment with image-recognition APIs\n\n\n\n\n\n\n\nmetmuseum.github.io"
  },
  {
    "objectID": "materials/d1-01-welcome/index.html#your-turn-exercise-0",
    "href": "materials/d1-01-welcome/index.html#your-turn-exercise-0",
    "title": "Welcome!",
    "section": "Your Turn Exercise 0",
    "text": "Your Turn Exercise 0\nUse the {shinyprod} package to deploy a simple Shiny app to RStudio Connect\n\n\n\n02:00\n\n\n\n\n\nshinyprod.com"
  },
  {
    "objectID": "materials/d1-02-reactivity/codealong-1.html",
    "href": "materials/d1-02-reactivity/codealong-1.html",
    "title": "Building the Image Viewer",
    "section": "",
    "text": "We are going to code together an initial prototype of the MET Art Image viewer as a building block for the rest of the workshop. Open the codealong-1/app.R script in RStudio to follow along and code with me.\n\nHigh-Level Requirements\nOur goal is to let the user view an artwork piece inside the app by displaying the image of the artwork using the image_url value inside the art_sub data frame for a given artwork. On top of the image display, here are additional requirements:\n\nDisplay metadata alongside the image so the user can view details about the artwork.\nAbility to filter choice of images by department\nLet the user either approve the image for their virtual collection, or to reject the image and not have it displayed to them again.\n\nWhile the workshop will continuously progress us to creating the production version of the application, this code-along will get us the basic functionality as a foundation for further development.\n\n\nDevelopment Strategy\n\nAssemble an input data set based on the (optional) department selected.\nUse a single art item to ensure the image and metadata display works correctly, while thinking about the dynamic nature later on.\nCreate a workflow using a streamlined reactive (and observer) strategy to dynamically record user decision (like or reject) for an art piece, and update available art pieces based on these results.\nDisplay the user decisions in a small table below the art display."
  },
  {
    "objectID": "materials/d1-02-reactivity/ex-1.html",
    "href": "materials/d1-02-reactivity/ex-1.html",
    "title": "Reactivity Enhancement",
    "section": "",
    "text": "The application contained in the ex-1/app.R script has two inputs utilized for a visualization of the most annotated objects within the art collection of particular departments. Nothing is causing errors during app runtime, however the reactivity flow within the server-side processing is not optimal. Take the next 5 minutes to find ways of improving the structure of reactive components."
  },
  {
    "objectID": "materials/d1-02-reactivity/ex-2.html",
    "href": "materials/d1-02-reactivity/ex-2.html",
    "title": "Multiple Controls",
    "section": "",
    "text": "The application contained in the ex-2/app.R script introduces an additional input defining the range of confidence scores to subset the derived data for the visualization. Once again, the application code does not contain errors that prevent execution. But there are multiple issues to solve regarding validity of results and to minimize unneccessary calculations. Take the next 5 minutes to pinpoint the logic error and to further streamline the reactive flow of the backend processing."
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#default-perspective",
    "href": "materials/d1-02-reactivity/index.html#default-perspective",
    "title": "Windows of Reactivity",
    "section": "Default Perspective",
    "text": "Default Perspective"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#default-perspective-1",
    "href": "materials/d1-02-reactivity/index.html#default-perspective-1",
    "title": "Windows of Reactivity",
    "section": "Default Perspective",
    "text": "Default Perspective\n\n\n\nselectInput(\n  \"dept\",\n  \"Select Department\",\n  choices = dept_choices,\n  selected = dept_choices[1],\n  multiple = FALSE\n)\n\n\n\noutput$top_objects <- renderPlot({\n  df <- art_data |>\n    filter(department == input$dept)\n  \n  # more data processing ....\n  \n  ggplot(df, aes(x = name, y = n)) +\n    geom_col() +\n    xlab(NULL) +\n    ylab(\"Frequency of Annotation\") +\n    ggtitle(\"Top 5 Objects Annotated\")\n})"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#default-perspecive",
    "href": "materials/d1-02-reactivity/index.html#default-perspecive",
    "title": "Windows of Reactivity",
    "section": "Default Perspecive",
    "text": "Default Perspecive\n\n\n\n\n\nreactive input: input$dept\n\n\n\n\n\n\noutput: output$top_objects\n\n\n\n\nThe beginning (and end) of a typical Shiny interaction\n\nCan this approach scale to multiple inputs?"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#default-perspective-2",
    "href": "materials/d1-02-reactivity/index.html#default-perspective-2",
    "title": "Windows of Reactivity",
    "section": "Default Perspective",
    "text": "Default Perspective"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#default-perspective-3",
    "href": "materials/d1-02-reactivity/index.html#default-perspective-3",
    "title": "Windows of Reactivity",
    "section": "Default Perspective",
    "text": "Default Perspective\n\n\n\nselectInput(\n  \"dept\",\n  \"Select Department\",\n  choices = dept_choices,\n  selected = dept_choices[1],\n  multiple = FALSE\n)\n\nsliderInput(\n  \"n_top\",\n  \"Top Annotations\",\n  min = 1,\n  max = 10,\n  value = 5,\n  step = 1\n)\n\n\n\noutput$top_objects <- renderPlot({\n  df <- art_data |>\n    filter(department == input$dept)\n  \n  df2 <- df |>\n    # more data processing \n    # using input$n_top\n  \n  ggplot(df2, aes(x = name, y = n)) +\n    geom_col() +\n    xlab(NULL) +\n    ylab(\"Frequency of Annotation\")\n})"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#your-turn-exercise-1",
    "href": "materials/d1-02-reactivity/index.html#your-turn-exercise-1",
    "title": "Windows of Reactivity",
    "section": "Your Turn: Exercise 1",
    "text": "Your Turn: Exercise 1\nOpen the application in ex-1/app.R and see if you can improve the reactivity flow in the next 5 minutes. View more details at the Exercise 1 page.\n\n\n\n05:00"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#the-middle",
    "href": "materials/d1-02-reactivity/index.html#the-middle",
    "title": "Windows of Reactivity",
    "section": "The Middle",
    "text": "The Middle\n\n\n\n\n\n\n\n\nreactive expressions"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#the-building-blocks-of-reactivity",
    "href": "materials/d1-02-reactivity/index.html#the-building-blocks-of-reactivity",
    "title": "Windows of Reactivity",
    "section": "The Building Blocks of Reactivity",
    "text": "The Building Blocks of Reactivity\n\nInputs & Reactive ValuesReactive ExpressionsOutputs & Observers\n\n\nThe sources used in downstream endpoints\n\n\nNot only the classic input widgets within your UI\n\n\n\n\nIntermediate bridges between sources and endpoints.\n\n\nBoth consume and produce\n\n\n\n\nConsumers of one or more sources.\n\n\nGoal is to produce a side-effect"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#your-turn-exercise-2",
    "href": "materials/d1-02-reactivity/index.html#your-turn-exercise-2",
    "title": "Windows of Reactivity",
    "section": "Your Turn: Exercise 2",
    "text": "Your Turn: Exercise 2\nOpen the application in ex-2/app.R which has 2 inputs that drive the visualization. See if you can optimize the reactive calculations in the next 5 minutes.\n\n\n\n05:00"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#navigating-reactivity-reactlog",
    "href": "materials/d1-02-reactivity/index.html#navigating-reactivity-reactlog",
    "title": "Windows of Reactivity",
    "section": "Navigating Reactivity: {reactlog}",
    "text": "Navigating Reactivity: {reactlog}\n\n\nlibrary(shiny)\nlibrary(reactlog)\n\nreactlog_enable()\n\n# remaining app logic\n\n\n\nComplete overhaul of Shiny‚Äôs interactive reactive flow visualization\nPowered by the {reactlog} package\nEssential for answering what (and potentially why) your app behaves a certain way"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#section-1",
    "href": "materials/d1-02-reactivity/index.html#section-1",
    "title": "Windows of Reactivity",
    "section": "",
    "text": "Reactive\n\nUse for calculations\nLazy\nCached\nReturns a value\nAbsolutely no side effects\n\n\nObserver\n\nUse for side effects\nVery eager\nForgetful (no caching)\nNo return value\nOnly for side effects"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#isnt-lazy-a-.",
    "href": "materials/d1-02-reactivity/index.html#isnt-lazy-a-.",
    "title": "Windows of Reactivity",
    "section": "Isn‚Äôt Lazy a ‚Ä¶.",
    "text": "Isn‚Äôt Lazy a ‚Ä¶.\nWhen constructing a Shiny app, lazy is not a bad thing for reactives!\n\nOnly preform calculations when absolutely necessary\nIntentional design will reward you with efficient performance"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#those-troublesome-observers",
    "href": "materials/d1-02-reactivity/index.html#those-troublesome-observers",
    "title": "Windows of Reactivity",
    "section": "Those Troublesome Observers",
    "text": "Those Troublesome Observers\n\n\n\n\nObservers may cause reactive chaos in your app\nBut with a little control, they can be just as valuable\n\n\n\n\n\n\nJoe Cheng at Shiny Dev Con 2016"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#event-driven-processing",
    "href": "materials/d1-02-reactivity/index.html#event-driven-processing",
    "title": "Windows of Reactivity",
    "section": "Event-driven Processing",
    "text": "Event-driven Processing\nobserveEvent ensures processing only happens based on a single trigger\n\nButton click\nUpdated reactive expression\nUpdated reactiveValues or reactiveVal"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#inputs-from-the-server",
    "href": "materials/d1-02-reactivity/index.html#inputs-from-the-server",
    "title": "Windows of Reactivity",
    "section": "Inputs from the Server",
    "text": "Inputs from the Server\n\nUsers typically drive processing through the Shiny UI\nSometimes you need to create a dynamic version that can be updated within the server-side logic\nThe MVPs: reactiveValues and reactiveVal"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#inputs-from-the-server-1",
    "href": "materials/d1-02-reactivity/index.html#inputs-from-the-server-1",
    "title": "Windows of Reactivity",
    "section": "Inputs from the Server",
    "text": "Inputs from the Server\nserver <- function(input, output, session) {\n  rv <- reactiveValues(x = 0)\n  rv2 <- reactiveVal(0)\n  \n  observeEvent(input$btn, {\n    rv$x <- rv$x + 1\n    rv2(rv2() + 1)\n  })\n}"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#more-from-the-reactivity-bank",
    "href": "materials/d1-02-reactivity/index.html#more-from-the-reactivity-bank",
    "title": "Windows of Reactivity",
    "section": "More from the Reactivity Bank",
    "text": "More from the Reactivity Bank\n\nbindEvent: Modify an object to support triggers\ninvalidateLater: Use running time as a source to reactivity\nreactivePoll: Create a reactive data source invalidated by a check function\nisolate: Prevent reactivity\nreq: Ensure pre-conditions are met before proceeding\ndebounce/throttle: Slow the reactive-roll down"
  },
  {
    "objectID": "materials/d1-02-reactivity/index.html#additional-resources",
    "href": "materials/d1-02-reactivity/index.html#additional-resources",
    "title": "Windows of Reactivity",
    "section": "Additional Resources",
    "text": "Additional Resources\n\n\nMastering Reactivity chapters from Hadley Wickham‚Äôs Mastering Shiny\nJoe Cheng‚Äôs Effective Reactive Programming: Part 1 and Part 2\nShiny Developer Series Episode 12 with Barret Schloerke\n\n\n\n\nshinyprod.com"
  },
  {
    "objectID": "materials/d1-03-design-ux/ex-1.html",
    "href": "materials/d1-03-design-ux/ex-1.html",
    "title": "Styling the Art Image Viewer (Part 1)",
    "section": "",
    "text": "Reduce the maximum width the image uses when rendered in the application UI.\nAdd a stylish border to the image display using customized CSS. Thanks to Cyndi Kirkpatrick for her tutorial with accompanying css and image assets.\n\n\n\n\n\n\n\nPre-work\n\n\n\nUse the following CSS code to produce the picture border. The required image file border.png is already present in the www subdirectory of the exercise directory.\n.borderedpicture3 {\n  background-color: #7d7d7d;\n  background-image: url(\"border.png\");\n  width: 70%;\n  max-width: 70%;\n  height: auto;\n  padding: 10px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0\n      rgba(0, 0, 0, 0.19);\n}\n\n\nAdditional hints:\n\nRefer to the Resize images proportionally with CSS tutorial for guidance on setting the image maximum width."
  },
  {
    "objectID": "materials/d1-03-design-ux/ex-2.html",
    "href": "materials/d1-03-design-ux/ex-2.html",
    "title": "Styling the Art Image Viewer (Part 2)",
    "section": "",
    "text": "Tip\n\n\n\nYou are welcome to deploy your app on the workshop RStudio Connect server! Run shinyprod::deploy_app() in the R console or select the Deploy Shiny App RStudio add-in."
  },
  {
    "objectID": "materials/d1-03-design-ux/ex-3.html",
    "href": "materials/d1-03-design-ux/ex-3.html",
    "title": "Extending the Art Viewer UX",
    "section": "",
    "text": "Leverage the {cicerone} package to add an interactive help guide covering the key inputs such as department selection and approval / rejection of art pieces.\nIncorporate custom JavaScript code to create a zoom-in and zoom-out capability for the image viewer. See the reference below for a starting point.\n\n\n\n\n\n\n\nTip\n\n\n\nA convenient set of JavaScript code for performing image zoom is available on Mickey Aharony‚Äôs Cool Tricks for Resising Images in JavaScript blog post. For convenience, here are two functions derived from that post which could be useful:\nzoomin = function() {\n  var myImg = document.getElementById(\"imgid\");\n  var currWidth = myImg.clientWidth;\n  console.log('image width before zoomin is ' + currWidth);\n  if(currWidth >= 10000){\n      alert(\"You‚Äôre fully zoomed in!\");\n  } else{\n      myImg.style.width = (currWidth + 100) + \"px\";\n      var nextWidth = myImg.clientWidth;\n      console.log('image width after zoomin is ' + nextWidth);\n  } \n}\n\nzoomout = function() {\n  var myImg = document.getElementById(\"imgid\");\n  var currWidth = myImg.clientWidth;\n  console.log('image width before zoomin is ' + currWidth);\n  if(currWidth <= 20){\n      alert(\"That‚Äôs as small as it gets.\");\n  } else{\n      myImg.style.width = (currWidth - 100) + \"px\";\n      var nextWidth = myImg.clientWidth;\n      console.log('image width after zoomin is ' + nextWidth);\n  }\n}\nNote the use of the getElementById(\"imgid\") call. This tells the script to apply the function code to an element in the web application with that particular ID."
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#but-im-not-a-web-designer",
    "href": "materials/d1-03-design-ux/index.html#but-im-not-a-web-designer",
    "title": "prod-shiny-workshop",
    "section": "But ‚Ä¶ I‚Äôm not a Web Designer?",
    "text": "But ‚Ä¶ I‚Äôm not a Web Designer?\n\n\nWealth of packages available in the Shiny ecosystem\nPlug-in favorite theme styles\nAbility to go as low-level as desired with CSS and JavaScript\n\n\nüí° It‚Äôs not all about you! (That‚Äôs good)"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#multiple-levels-of-abstraction",
    "href": "materials/d1-03-design-ux/index.html#multiple-levels-of-abstraction",
    "title": "prod-shiny-workshop",
    "section": "Multiple Levels of Abstraction",
    "text": "Multiple Levels of Abstraction\n\n\n\n{shiny}\nfluidRow()\n\n{htmltools}\ndiv(class=\"row\", ...)\n\nRaw HTML\n<div class=\"row\">...</div>\n\n\n\nEmpowers users across spectrum of design experience"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#cascading-style-sheets-css",
    "href": "materials/d1-03-design-ux/index.html#cascading-style-sheets-css",
    "title": "prod-shiny-workshop",
    "section": "Cascading Style Sheets (CSS)",
    "text": "Cascading Style Sheets (CSS)\nSet of rules that define how HTML content is presented in the browser\n\nselector {\n  property1: value;\n  property2: value;\n}\n\n\nselector defines which elements on page to apply rule\nproperty list set properties of elements to specific values"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#customizing-css-in-shiny-1",
    "href": "materials/d1-03-design-ux/index.html#customizing-css-in-shiny-1",
    "title": "prod-shiny-workshop",
    "section": "Customizing CSS in Shiny (1)",
    "text": "Customizing CSS in Shiny (1)\n\n\nui <- fluidPage(\n  tags$head(\n    tags$style(\n      HTML(\"\n      body {\n        background-color: blue;\n        color: white;\n      }\")\n    )\n  ),\n  # application UI\n  ...\n)\n\n\ntags originates from {htmltools}, but imported with {shiny}"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#customizing-css-in-shiny-2",
    "href": "materials/d1-03-design-ux/index.html#customizing-css-in-shiny-2",
    "title": "prod-shiny-workshop",
    "section": "Customizing CSS in Shiny (2)",
    "text": "Customizing CSS in Shiny (2)\n\n\n# app.R\n\nui <- fluidPage(\n  tags$head(\n    tags$link(\n      rel = \"stylesheet\", \n      type = \"text/css\", \n      href = \"custom.css\"\n    )\n  )\n)\n\n/* www/custom.css */\n\nbody {\n  background-color: blue;\n  color: white;\n}"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#customizing-css-in-shiny-3",
    "href": "materials/d1-03-design-ux/index.html#customizing-css-in-shiny-3",
    "title": "prod-shiny-workshop",
    "section": "Customizing CSS in Shiny (3)",
    "text": "Customizing CSS in Shiny (3)\nui <- fluidPage(\n  h2(\n  \"Art Viewer Application\", \n  style = \"font-family: monospace;\"\n  ),\n  ...\n)"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#your-turn-exercise-1",
    "href": "materials/d1-03-design-ux/index.html#your-turn-exercise-1",
    "title": "prod-shiny-workshop",
    "section": "Your Turn: Exercise 1",
    "text": "Your Turn: Exercise 1\nIn the application ex-1/app.R, give the image display a bit of style! Visit the exercise page for more details.\n\n\n\n05:00"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#almost-endless-possibilities",
    "href": "materials/d1-03-design-ux/index.html#almost-endless-possibilities",
    "title": "prod-shiny-workshop",
    "section": "(Almost) Endless Possibilities",
    "text": "(Almost) Endless Possibilities\n\n\nShiny UI powered by Bootstrap\nDefaults are clean and simple\nRevising the style for every element ‚Ä¶"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#enter-bslib",
    "href": "materials/d1-03-design-ux/index.html#enter-bslib",
    "title": "prod-shiny-workshop",
    "section": "Enter {bslib}",
    "text": "Enter {bslib}\n\nProvides tools for customizing Bootstrap themes directly in R\n\n\nEasy to explore theme options interactively\nLogical parameters to most common elements for color, font, and more\nBuilt upon the Sass stylesheet language to extend traditional CSS with modern features"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#your-turn-exercise-2",
    "href": "materials/d1-03-design-ux/index.html#your-turn-exercise-2",
    "title": "prod-shiny-workshop",
    "section": "Your Turn: Exercise 2",
    "text": "Your Turn: Exercise 2\nBuilding upon the app from exercise 1, use {bslib} to customize font and other theme elements!\n\n\n\n05:00"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#accessibility",
    "href": "materials/d1-03-design-ux/index.html#accessibility",
    "title": "prod-shiny-workshop",
    "section": "Accessibility",
    "text": "Accessibility\nPrioritizing accessibility leads to better UX!\n\n\nKeyboard navigation (without mouse)\nVisualization color palettes accounting for vision deficiencies\nMetadata for HTML tag attributes"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#guides-with-cicerone",
    "href": "materials/d1-03-design-ux/index.html#guides-with-cicerone",
    "title": "prod-shiny-workshop",
    "section": "Guides with {cicerone}",
    "text": "Guides with {cicerone}\n\nA convienent API to create guided tours of Shiny applications using driver.js"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#the-cicerone-workflow",
    "href": "materials/d1-03-design-ux/index.html#the-cicerone-workflow",
    "title": "prod-shiny-workshop",
    "section": "The {cicerone} Workflow",
    "text": "The {cicerone} Workflow\n\n\nNote the input IDs of elements for guide\nUse the Cicerone R6 class and step() methods to define steps\nImport dependencies by declaring use_cicerone() in app UI\nDefine triggers to start guide in app server"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#shinywidgets",
    "href": "materials/d1-03-design-ux/index.html#shinywidgets",
    "title": "prod-shiny-workshop",
    "section": "{shinyWidgets}",
    "text": "{shinyWidgets}\n\nCustom widgets and other components to enhance your Shiny application\n\n\n\nAlternatives to many classic Shiny inputs wrapping specialized frameworks within Bootstrap, Material Design, and more\nFantastic demonstration app: shinyapps.dreamrs.fr/shinyWidgets"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#the-shiny-ui-ecosystem",
    "href": "materials/d1-03-design-ux/index.html#the-shiny-ui-ecosystem",
    "title": "prod-shiny-workshop",
    "section": "The Shiny UI Ecosystem",
    "text": "The Shiny UI Ecosystem\n\nbs4dash.rinterface.com"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#choose-your-widget",
    "href": "materials/d1-03-design-ux/index.html#choose-your-widget",
    "title": "prod-shiny-workshop",
    "section": "Choose your Widget",
    "text": "Choose your Widget\n\n\n{shinydashboard}\n\n\nüòÄ Easy, right?\n\nlibrary(shiny)\nlibrary(shinydashboard)\nui <- fluidPage(\n  h2(\"My Title\")\n  valueBox(4024, \"Total downloads\")\n)\n\n\n\nüòê Not quite: {shiny} and {shinydashboard} use different styling toolkits under the hood"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#htmltools-to-the-rescue",
    "href": "materials/d1-03-design-ux/index.html#htmltools-to-the-rescue",
    "title": "prod-shiny-workshop",
    "section": "üí™ {htmltools} to the Rescue",
    "text": "üí™ {htmltools} to the Rescue\n\nDefine WidgetApp Usage\n\n\nuseValueBox <- function() {\n  if (!requireNamespace(package = \"shinydashboard\")) {\n    message(\"package 'shinydashboard' is required to run this function\")\n  }\n  \n  deps <- htmltools::findDependencies(\n      shinydashboard::dashboardPage(\n        header = shinydashboard::dashboardHeader(),\n        sidebar = shinydashboard::dashboardSidebar(),\n        body = shinydashboard::dashboardBody()\n      )\n  )\n  htmltools::attachDependencies(tags$div(), value = deps)\n}\n\nvalue_box <- function(...) shinydashboard::valueBox(...)\n\n\nlibrary(shiny)\nlibrary(shinydashboard)\n\nui <- fluidPage(\n  useValueBox()\n  h2(\"My Title\")\n  value_box(4024, \"Total downloads\")\n)"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#back-to-shinywidgets",
    "href": "materials/d1-03-design-ux/index.html#back-to-shinywidgets",
    "title": "prod-shiny-workshop",
    "section": "Back to {shinyWidgets}",
    "text": "Back to {shinyWidgets}\nUsage of this powerful technique in {shinyWidgets}:\n\n\nuseArgonDash()\nusebs4Dash()\nuseShinyDashboard()\nuseShinyDashboardPlus()\nuseTablerDash()"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#not-just-styling",
    "href": "materials/d1-03-design-ux/index.html#not-just-styling",
    "title": "prod-shiny-workshop",
    "section": "Not Just Styling",
    "text": "Not Just Styling\nAll of Shiny‚Äôs interactivity is powered by JavaScript\n\n\nDirect pipe to & from R process to client (browser)\nNormal use: Everything set up for you\n\n\nFoundations in place to extend Shiny‚Äôs power when desired"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#shinyjs",
    "href": "materials/d1-03-design-ux/index.html#shinyjs",
    "title": "prod-shiny-workshop",
    "section": "{shinyjs}",
    "text": "{shinyjs}\n\nEasily improve the user experience of your Shiny apps in seconds, without having to know JS\n\n\n\nEnable & disable buttons\nShow & hide elements\nDynamically adding and removing CSS classes\nClick a shiny button from server side\nRun JS scripts easily if desired"
  },
  {
    "objectID": "materials/d1-03-design-ux/index.html#your-turn-exercise-3",
    "href": "materials/d1-03-design-ux/index.html#your-turn-exercise-3",
    "title": "prod-shiny-workshop",
    "section": "Your Turn: Exercise 3",
    "text": "Your Turn: Exercise 3\nHarness the power of custom JavaScript in the Art Viewer App!\n\n\n\n10:00\n\n\n\n\n\nshinyprod.com"
  },
  {
    "objectID": "materials/d1-04-db-api/codealong-1.html",
    "href": "materials/d1-04-db-api/codealong-1.html",
    "title": "Caling a RESTful API from R",
    "section": "",
    "text": "We are going to use R and in particular the {httr2} package to interact with the Metropolitan Museum of Art Collection API. In particular, we will leverage the API to answer the following questions:\n\nWhat are the departments contained in the museum?\nHow many art pieces contain a shield?"
  },
  {
    "objectID": "materials/d1-04-db-api/ex-1.html",
    "href": "materials/d1-04-db-api/ex-1.html",
    "title": "Database within the Art Viewer",
    "section": "",
    "text": "The application contained in the ex-1/app.R is the same as what we built in the reactivity code-along activity. But now it is time to pivot our backend to leverage a robust database stored as a SQLite file.\n\n\n\n\n\n\nPre-work\n\n\n\nCopy the SQLite database file to the data directory for this application by executing the following snippet in the R console:\nfs::file_copy(\"materials/db/db_small.sqlite\", \"materials/d1-05-db-api/exercise-1/data/db_small.sqlite)\n\n\nHere are the tasks to complete for this exercise:\n\nInstead of loading the input data via an RDS file, switch to a database connection using the aforementioned SQLite file.\nUtilize a table in the database called choice_data to store the metadata associated with the user‚Äôs decision for liking or rejection an art piece. The data should have the following variables: user, img_file, decision\n\n\n\n\n\n\n\nTip\n\n\n\nYou can obtain the user name by using the function get_user() stored in the R/get_user.R script."
  },
  {
    "objectID": "materials/d1-04-db-api/ex-3.html",
    "href": "materials/d1-04-db-api/ex-3.html",
    "title": "Using APIs within the Art Viewer",
    "section": "",
    "text": "After exploring the use of databases to enhance the backend of the Art Viewer app, it is now time to harness the benefits of external APIs to offload processing. You will leverage the APIs to accomplish the following features:\n\nLet the user type in a search box to return a collection of objects that contain the search term within their metadata. You will need to use one or more of the API endpoints from the MET Museum Data API\nAnnotate the displayed art object image with a bounding box based on metadata from the included object annotation data set. Use the custom draw box API deployed on the workshop‚Äôs RStudio Connect server documented at https://rsc.training.rstudio.com/artdraw.\n\nThe application in ex-3/app.R is very similar to the previous exercises, but with placeholders in the UI for you to add widgets supporting the search box, as well as to request a bounding box to appear.\n\n\n\n\n\n\nTip\n\n\n\nYou can find object annotation data withindata/object_annotation_df.rds. A description of the columns can be found in the resources page, but there is a simple data table in the application that displays row(s) for the object or set of objects with bounding box information.\nWhen the user clicks a row in that table, DT will expose an input called input$object_table_rows_selected which can be used to determine which particular annotation data config was selected."
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#the-r-process-in-shiny",
    "href": "materials/d1-04-db-api/index.html#the-r-process-in-shiny",
    "title": "Databases & APIs",
    "section": "The R Process in Shiny",
    "text": "The R Process in Shiny"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#powerup-with-delegation",
    "href": "materials/d1-04-db-api/index.html#powerup-with-delegation",
    "title": "Databases & APIs",
    "section": "Powerup with Delegation",
    "text": "Powerup with Delegation"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#interface-to-databases-dbi",
    "href": "materials/d1-04-db-api/index.html#interface-to-databases-dbi",
    "title": "Databases & APIs",
    "section": "Interface to Databases: {DBI}",
    "text": "Interface to Databases: {DBI}\nUnified set of methods & classes bridging interfacing R to database management systems (DBMS)\n\nConnect and disconnect from DB\nExecute queries\nExtract results\nObtain metadata when available\nEach DBMS supported by a dedicated package"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#all-about-connections",
    "href": "materials/d1-04-db-api/index.html#all-about-connections",
    "title": "Databases & APIs",
    "section": "All About Connections",
    "text": "All About Connections\nYou have used connections in R (and may not realize it)\nread.csv(\"path/to/file.csv\", stringsAsFactors = FALSE)\n\nreadr::read_csv(\"path/to/file.csv\")\n\nopenxlsx::write.xlsx(df, file = \"/path/to/file.xlsx\")\n\n\n\nBehind the scenes: connections are dynamically created (and terminated) during file input/output."
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#database-options",
    "href": "materials/d1-04-db-api/index.html#database-options",
    "title": "Databases & APIs",
    "section": "Database Options",
    "text": "Database Options\n\n\nRelational databases come in many flavors\n\n\n\n\nSQLite\n\n Written to file\n Open access\n {RSQLite}\nIdeal for prototyping DB solutions\n\nPostGreSQL\n\n Hosted on server\n Access via authentication\n {RPostgres}\nIdeal for production-grade DB workflows"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#defining-connection",
    "href": "materials/d1-04-db-api/index.html#defining-connection",
    "title": "Databases & APIs",
    "section": "Defining Connection",
    "text": "Defining Connection\n\nlibrary(DBI)\nlibrary(RSQLite)\n\n# initialize connection object\ncon <- dbConnect(\n  drv = RSQLite::SQLite(),\n  dbname = \":memory:\"\n)\n\n# send data frame to a table\ndbWriteTable(con, \"sample_data\", as.data.frame(sample_data))\n\n# disconnect when done\n#dbDisconnect(con)"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#applying-your-dplyr-skillz",
    "href": "materials/d1-04-db-api/index.html#applying-your-dplyr-skillz",
    "title": "Databases & APIs",
    "section": "Applying your {dplyr} Skillz",
    "text": "Applying your {dplyr} Skillz\n{dbplyr} provides automatic translation from dplyr syntax to SQL statements\n\nIntegrates with connection objects created by {DBI}\nCalls are evaluated lazily: Only when you request results\nCommon dplyr verbs supported out of the box"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#applying-your-dplyr-skillz-1",
    "href": "materials/d1-04-db-api/index.html#applying-your-dplyr-skillz-1",
    "title": "Databases & APIs",
    "section": "Applying your {dplyr} Skillz",
    "text": "Applying your {dplyr} Skillz\n\nlibrary(dplyr)\n\nsample_db <- tbl(con, \"sample_data\")\n\nsample_db %>%\n  group_by(department) %>%\n  summarize(total_objects = sum(n_objects, na.rm = TRUE))\n\n# Source:   lazy query [?? x 2]\n# Database: sqlite 3.39.1 [:memory:]\n   department                                total_objects\n   <chr>                                             <int>\n 1 Ancient Near Eastern Art                            116\n 2 Arms and Armor                                       68\n 3 Arts of Africa, Oceania, and the Americas            88\n 4 Asian Art                                            32\n 5 Costume Institute                                   104\n 6 Drawings and Prints                                  60\n 7 Egyptian Art                                        128\n 8 European Sculpture and Decorative Arts              360\n 9 Greek and Roman Art                                 424\n10 Islamic Art                                         164\n# ‚Ä¶ with more rows"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#your-turn-exercise-1",
    "href": "materials/d1-04-db-api/index.html#your-turn-exercise-1",
    "title": "Databases & APIs",
    "section": "Your Turn: Exercise 1",
    "text": "Your Turn: Exercise 1\nIn the application ex-1/app.R, pivot the backend to leverage a SQLite database. See the Exercise 1 page for additional details.\n\n\n\n10:00"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#connections-in-shiny",
    "href": "materials/d1-04-db-api/index.html#connections-in-shiny",
    "title": "Databases & APIs",
    "section": "Connections in Shiny",
    "text": "Connections in Shiny\n\n\n\n\nLogical ways to manage connections when developing solo"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#connections-in-shiny-1",
    "href": "materials/d1-04-db-api/index.html#connections-in-shiny-1",
    "title": "Databases & APIs",
    "section": "Connections in Shiny",
    "text": "Connections in Shiny\n\n\n\n\n\n\nMany users creating connections\nPotential for degraded performance in your app"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#enter-the-pool",
    "href": "materials/d1-04-db-api/index.html#enter-the-pool",
    "title": "Databases & APIs",
    "section": "Enter the {pool}!",
    "text": "Enter the {pool}!\n\nAbstraction layer on top of database connection objects\n\n\nHolds a group of connections to database\nKnows to expand or reduce connections as needed"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#lets-dive-in",
    "href": "materials/d1-04-db-api/index.html#lets-dive-in",
    "title": "Databases & APIs",
    "section": "Let‚Äôs Dive In",
    "text": "Let‚Äôs Dive In\n\n\ncon <- dbConnect(\n  drv = RSQLite::SQLite(),\n  dbname = \":memory:\"\n)\n\npool <- dbPool(\n  drv = RSQLite::SQLite(),\n  dbname = \":memory:\"\n)\n\n\n\n\npool object a drop-in replacement for con\nEach query goes to the pool first, then fetches or initializes a connection\nNot necessary to create connections yourself"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#ap---what",
    "href": "materials/d1-04-db-api/index.html#ap---what",
    "title": "Databases & APIs",
    "section": "AP - What?",
    "text": "AP - What?\n\nApplication Programming Interface: Method of communicating between different software services"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#benefits-of-apis",
    "href": "materials/d1-04-db-api/index.html#benefits-of-apis",
    "title": "Databases & APIs",
    "section": "Benefits of APIs",
    "text": "Benefits of APIs\n\nCommunication using a standard set of web request protocols\nAgnostic to the software or language performing the request\nCapable of producing many types of output\n\n\nHow can we communicate (and create) APIs in R?"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#httr2",
    "href": "materials/d1-04-db-api/index.html#httr2",
    "title": "Databases & APIs",
    "section": "{httr2}",
    "text": "{httr2}\n\nA ground-up rewrite of {httr} providing a pipeable API\n\n\nBuild a request object to facilitate different pieces of a request workflow\nAbility to perform dry-runs before actually sending the request\nAutomatic conversion of HTTP errors to native R errors"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#your-turn-exercise-3",
    "href": "materials/d1-04-db-api/index.html#your-turn-exercise-3",
    "title": "Databases & APIs",
    "section": "Your Turn: Exercise 3",
    "text": "Your Turn: Exercise 3\nCall the MET Museum API and a custom image overlay API within the Shiny app. See the Exercise 3 page for additional details.\n\n\n\n10:00"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#database-resources",
    "href": "materials/d1-04-db-api/index.html#database-resources",
    "title": "Databases & APIs",
    "section": "Database Resources",
    "text": "Database Resources\n\n\nUsing databases with Shiny blog post by Emily Riederer\nDatabases using R\n{DBI}: R Database Interface\n{dbplyr}: A {dplyr} backend for databases\nTidyX episodes\n{dm}: Relational data models\nShiny and Arrow blog post by Michael Thomas"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#api-resources",
    "href": "materials/d1-04-db-api/index.html#api-resources",
    "title": "Databases & APIs",
    "section": "API Resources",
    "text": "API Resources\n\n\n{plumber}: An API generator for R"
  },
  {
    "objectID": "materials/d1-04-db-api/index.html#cleaning-up",
    "href": "materials/d1-04-db-api/index.html#cleaning-up",
    "title": "Databases & APIs",
    "section": "Cleaning Up",
    "text": "Cleaning Up\n\n\n\n\n\nshinyprod.com"
  },
  {
    "objectID": "materials/d2-01-modules/codealong-1.html",
    "href": "materials/d2-01-modules/codealong-1.html",
    "title": "A Modularized Art Image Viewer",
    "section": "",
    "text": "High-Level Requirements\nOur goal is to leverage the MET Image Viewer API directly to provide an easy way for users to search for the images they‚Äôd like to view based on a keyword search using techniques discussed in the Databases & APIs section. Once the search is executed, we want to use the powerful {timevis} HTML widget R package to show a timeline visualization of the art pieces year acquired by the MET, or the duration of an art piece‚Äôs age. This widget supports the ability to click on an entry, and we will display the image picture alongside its metadata like we did in earlier applications.\nWe have a rough idea of the application structure, and we will take advantage of backend custom R functions to begin scoping out three different modules:\n\nSearch module\nTimevis visualization module\nImage viewer module\n\nWhile we are focused on the process of creating and networking modules together, we will see a blend of design, user experience, and defensive programming needed to create a smooth experience for the user.\n\n\n\n\n\n\nTip\n\n\n\nYou can easily insert a template Shiny module in an open file within RStudio by taking advantage of RStudio snippets. Just type shinymod and it will offer an auto-completion with the UI and server functions based on the name you give the module."
  },
  {
    "objectID": "materials/d2-01-modules/index.html#what-are-modules",
    "href": "materials/d2-01-modules/index.html#what-are-modules",
    "title": "All About Modules",
    "section": "What are Modules?",
    "text": "What are Modules?\n\nBuilding blocks to compose any Shiny app out of smaller, more understandable pieces\n\nAvoids namespace collisions when using same widget across different areas of your app\nAllow you to encapsulate distinct app interfaces\nOrganize code into logical and easy-to-understand components\nFacilitate collaboration"
  },
  {
    "objectID": "materials/d2-01-modules/index.html#sound-familiar",
    "href": "materials/d2-01-modules/index.html#sound-familiar",
    "title": "All About Modules",
    "section": "Sound familiar?",
    "text": "Sound familiar?\n\nR functions also help avoid collisions in variable names with general R code\nEssential for creating non-trivial and extensive workflows"
  },
  {
    "objectID": "materials/d2-01-modules/index.html#anatomy-of-a-function-ui",
    "href": "materials/d2-01-modules/index.html#anatomy-of-a-function-ui",
    "title": "All About Modules",
    "section": "Anatomy of a Function (UI)",
    "text": "Anatomy of a Function (UI)\n\n\nartUI <- function() {\n  tagList(\n    checkboxInput(\n      \"input1\",\n      \"Check Here\"\n    ),\n    selectInput(\n      \"input2\",\n      \"Select Object\",\n      choices = c(\"jar\", \"vase\"),\n      selected = \"jar\",\n      multiple = FALSE\n    ),\n    plotOutput(\"plot1\")\n  )\n}"
  },
  {
    "objectID": "materials/d2-01-modules/index.html#anatomy-of-a-module-ui",
    "href": "materials/d2-01-modules/index.html#anatomy-of-a-module-ui",
    "title": "All About Modules",
    "section": "Anatomy of a Module (UI)",
    "text": "Anatomy of a Module (UI)\n\n\nartUI <- function(id) {\n  ns <- NS(id)\n  tagList(\n    checkboxInput(\n      ns(\"input1\"),\n      \"Check Here\"\n    ),\n    selectInput(\n      ns(\"input2\"),\n      \"Select Object\",\n      choices = c(\"jar\", \"vase\"),\n      selected = \"jar\",\n      multiple = FALSE\n    ),\n    plotOutput(ns(\"plot1\"))\n  )\n}"
  },
  {
    "objectID": "materials/d2-01-modules/index.html#anatomy-of-a-module-ui-1",
    "href": "materials/d2-01-modules/index.html#anatomy-of-a-module-ui-1",
    "title": "All About Modules",
    "section": "Anatomy of a Module (UI)",
    "text": "Anatomy of a Module (UI)\n\n\nartUI <- function(id) {\n  ns <- NS(id)\n  tagList(\n    checkboxInput(\n      ns(\"input1\"),\n      \"Check Here\"\n    ),\n    selectInput(\n      ns(\"input2\"),\n      \"Select Object\",\n      choices = c(\"jar\", \"vase\"),\n      selected = \"jar\",\n      multiple = FALSE\n    )\n  )\n}\n\n\nid: String to use for namespace\nns <- NS(id): Create proper namespace function"
  },
  {
    "objectID": "materials/d2-01-modules/index.html#anatomy-of-a-module-server",
    "href": "materials/d2-01-modules/index.html#anatomy-of-a-module-server",
    "title": "All About Modules",
    "section": "Anatomy of a Module (Server)",
    "text": "Anatomy of a Module (Server)\n\n\nartServer <- function(input, output, session) {\n  df <- reactive({\n    # do something fancy\n  })\n  \n  output$plot1 <- renderPlot({\n    ggplot(df(), aes(x = x, y = y)) +\n      geom_point()\n  })\n}"
  },
  {
    "objectID": "materials/d2-01-modules/index.html#anatomy-of-a-module-server-1",
    "href": "materials/d2-01-modules/index.html#anatomy-of-a-module-server-1",
    "title": "All About Modules",
    "section": "Anatomy of a Module (Server)",
    "text": "Anatomy of a Module (Server)\n\n\nartServer <- function(id) {\n  moduleServer(\n    id,\n    function(input, output, session) {\n      df <- reactive({\n        # do something fancy\n      })\n      \n      output$plot1 <- renderPlot({\n        ggplot(df(), aes(x = x, y = y)) +\n          geom_point()\n      })\n    }\n  )\n}\n\nMinimal changes necessary"
  },
  {
    "objectID": "materials/d2-01-modules/index.html#anatomy-of-a-module-server-2",
    "href": "materials/d2-01-modules/index.html#anatomy-of-a-module-server-2",
    "title": "All About Modules",
    "section": "Anatomy of a Module (Server)",
    "text": "Anatomy of a Module (Server)\n\n\nartServer <- function(id) {\n  moduleServer(id,\n    function(input, output, session) {\n      df <- reactive({\n        # do something fancy\n      })\n      \n      output$plot1 <- renderPlot({\n        ggplot(df(), aes(x = x, y = y)) +\n          geom_point()\n      })\n    }\n  )\n}\n\nü§î id\n\n\n\n`moduleServer(): Encapsulate server-side logic with namespace applied."
  },
  {
    "objectID": "materials/d2-01-modules/index.html#invoking-modules",
    "href": "materials/d2-01-modules/index.html#invoking-modules",
    "title": "All About Modules",
    "section": "Invoking Modules",
    "text": "Invoking Modules\nui <- fluidPage(\n  fluidRow(\n    artUI(\"mod1\")\n  )\n)\n\nserver <- function(input, output, session) {\n  artServer(\"mod1\")\n}\n\nshinyApp(ui, server)"
  },
  {
    "objectID": "materials/d2-01-modules/index.html#giving-and-receiving",
    "href": "materials/d2-01-modules/index.html#giving-and-receiving",
    "title": "All About Modules",
    "section": "Giving and Receiving",
    "text": "Giving and Receiving\n\n\nartUI <- function(id, choices = c(\"jar\", \"vase\")) {\n  ns <- NS(id)\n  tagList(\n    checkboxInput(\n      ns(\"input1\"),\n      \"Check Here\"\n    ),\n    selectInput(\n      ns(\"input2\"),\n      \"Select Object\",\n      choices = choices,\n      selected = choices[1],\n      multiple = FALSE\n    ),\n    plotOutput(ns(\"plot1\"))\n  )\n}\n\n\nReasonable inputs: static values, vectors, flags\nAvoid reactive parameters\nReturn value: tagList() of inputs, output placeholders, and other UI elements"
  },
  {
    "objectID": "materials/d2-01-modules/index.html#giving-and-receiving-1",
    "href": "materials/d2-01-modules/index.html#giving-and-receiving-1",
    "title": "All About Modules",
    "section": "Giving and Receiving",
    "text": "Giving and Receiving\nartServer <- function(id, df, title = \"My Plot\") {\n  moduleServer(id,\n    function(input, output, session) {\n      user_selections <- reactive({\n        list(input1 = input$input1, input2 = input$input2)\n      })\n      \n      output$plot1 <- renderPlot({\n        ggplot(df(), aes(x = x, y = y)) +\n          geom_point() +\n          ggtitle(title)\n      })\n      \n      user_selections\n    }\n  )\n}\n\nInput parameters (and return values) can be a mix of static and reactive objects"
  },
  {
    "objectID": "materials/d2-01-modules/index.html#to-or-not-to",
    "href": "materials/d2-01-modules/index.html#to-or-not-to",
    "title": "All About Modules",
    "section": "To () or not to ()",
    "text": "To () or not to ()\n\n\n# app server\ndf <- reactive({\n  art_data |>\n    filter(dept == input$dept)\n})\n\nartServer(\"mod1\", df)\n\nartServer <- function(id, df, title = \"Amazing\") {\n  moduleServer(id,\n    function(input, output, session) {\n      user_selections <- reactive({\n        list(input1 = input$input1,\n             input2 = input$input2)\n      })\n      \n      output$plot1 <- renderPlot({\n        ggplot(df(), aes(x = x, y = y)) +\n          geom_point() +\n          ggtitle(title)\n      })\n      \n      user_selections\n    }\n  )\n}\n\n\n\nReactive parameters reference by name: df\nInside module, invoke reactive parameter as you would any other reactive in Shiny: df()\nAny reactive(s) returned by module should also be reference by name: user_selections, user_selections()"
  },
  {
    "objectID": "materials/d2-01-modules/index.html#your-turn-exercise-1",
    "href": "materials/d2-01-modules/index.html#your-turn-exercise-1",
    "title": "All About Modules",
    "section": "Your Turn: Exercise 1",
    "text": "Your Turn: Exercise 1\nCreate a Shiny module for the core image viewer portion of the application in ex-1/app.R\n\n\n\n10:00\n\n\n\n\n\nshinyprod.com"
  },
  {
    "objectID": "materials/d2-02-dev-practices/codealong-1.html",
    "href": "materials/d2-02-dev-practices/codealong-1.html",
    "title": "Prototyping UI wtih {shinipsum}",
    "section": "",
    "text": "We are going to step back in time and imagine we are just beginning to scope out the requirements and design goals for the Art Image Viewer app. We will use the {shinipsum} package authored by Colin Fay to quickly generate a Shiny app serving as a mock-up for our initial design.\nBonus Can we build in a theme toggle?"
  },
  {
    "objectID": "materials/d2-02-dev-practices/codealong-2.html",
    "href": "materials/d2-02-dev-practices/codealong-2.html",
    "title": "Creating a new {golem} Shiny app",
    "section": "",
    "text": "Let‚Äôs try creating a brand-new application structure using the {golem} package! After the initial setup, we will practice migrating one of our earlier versions of the Art Viewer application to a {golem} framework."
  },
  {
    "objectID": "materials/d2-02-dev-practices/codealong-3.html",
    "href": "materials/d2-02-dev-practices/codealong-3.html",
    "title": "Creating a new {rhino} Shiny app",
    "section": "",
    "text": "Let‚Äôs try creating a brand-new application structure using the {rhino} package! After the initial setup, we will practice migrating one of our earlier versions of the Art Viewer application to a {rhino} framework."
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#more-to-come",
    "href": "materials/d2-02-dev-practices/index.html#more-to-come",
    "title": "Development Best Practices",
    "section": "More to come",
    "text": "More to come\n\n\n\n\n\n\nWarning\n\n\nThese slides are under construction and will be updated continuously until the workshop date."
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#all-about-perspective",
    "href": "materials/d2-02-dev-practices/index.html#all-about-perspective",
    "title": "Development Best Practices",
    "section": "All About Perspective",
    "text": "All About Perspective\n\nR is the standard-bearer for data analysis tooling"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#shiny-app-development",
    "href": "materials/d2-02-dev-practices/index.html#shiny-app-development",
    "title": "Development Best Practices",
    "section": "Shiny App Development",
    "text": "Shiny App Development\nNot just providing another interface for data analysis\n\nYou are engineering an entire workflow"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#this-could-happen-to-you",
    "href": "materials/d2-02-dev-practices/index.html#this-could-happen-to-you",
    "title": "Development Best Practices",
    "section": "This Could Happen to You",
    "text": "This Could Happen to You"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#thinking-of-you",
    "href": "materials/d2-02-dev-practices/index.html#thinking-of-you",
    "title": "Development Best Practices",
    "section": "Thinking of You",
    "text": "Thinking of You\nThese principles can guide (future) you on the right path:\n\nRapid prototyping in design process\nDeliberate control of app dependencies\nManaging code complexity with native R frameworks\nDefending against regressions with testing\nVersion control for collaboration and peace of mind"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#blueprint-for-rapid-prototyping",
    "href": "materials/d2-02-dev-practices/index.html#blueprint-for-rapid-prototyping",
    "title": "Development Best Practices",
    "section": "Blueprint for Rapid Prototyping",
    "text": "Blueprint for Rapid Prototyping\n\nElicit goals & requirements from customers early and often\nResist urge to perfect server-side processing right away\nBring a minimum viable product (MVP) to customers for feedback"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#additional-tools",
    "href": "materials/d2-02-dev-practices/index.html#additional-tools",
    "title": "Development Best Practices",
    "section": "Additional Tools",
    "text": "Additional Tools\n\n\nmoqups.com: Streamlined web app to create wireframes, mockups, diagrams, and more\nexcalidraw.com: Collaborative whiteboard tool for sketching diagrams\nAny presentation software (yes, even PowerPoint)"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#its-never-just-shiny",
    "href": "materials/d2-02-dev-practices/index.html#its-never-just-shiny",
    "title": "Development Best Practices",
    "section": "It‚Äôs Never Just Shiny",
    "text": "It‚Äôs Never Just Shiny\n‚Ä¶ at least for production-quality apps!\n\nExternal data sources\nConnections to other execution backends\nAdditional R packages!"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#turned-upside-down",
    "href": "materials/d2-02-dev-practices/index.html#turned-upside-down",
    "title": "Development Best Practices",
    "section": "Turned Upside-Down",
    "text": "Turned Upside-Down\nImagine your application is working great!\n\n\n\n\nupdate.packages(ask = FALSE)\nremotes::install_github(\"pkg\")"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#turned-upside-down-1",
    "href": "materials/d2-02-dev-practices/index.html#turned-upside-down-1",
    "title": "Development Best Practices",
    "section": "Turned Upside-Down",
    "text": "Turned Upside-Down\n\n\nggplot2 version 0.9.3\n\n\nggplot2 version 1.0.0"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#take-control-with-renv",
    "href": "materials/d2-02-dev-practices/index.html#take-control-with-renv",
    "title": "Development Best Practices",
    "section": "Take Control with {renv}",
    "text": "Take Control with {renv}\n\nCreate reproducible environments for your R projects.\n\n\nNext generation of {packrat}\nIsolated package library from rest of your system\nTransfer projects to different collaborators / platforms\nReproducible package installation\nEasily create new projects or convert existing projects with RStudio or built-in functions."
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#under-the-hood",
    "href": "materials/d2-02-dev-practices/index.html#under-the-hood",
    "title": "Development Best Practices",
    "section": "Under the Hood",
    "text": "Under the Hood\nUpon initializing a project:\n\nProject-level .Rprofile to activate custom package library on startup\nLockfile renv.lock to describe state of project library\nrenv/library to hold private project library\nrenv/activate.R performs activation"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#develop-a-routine",
    "href": "materials/d2-02-dev-practices/index.html#develop-a-routine",
    "title": "Development Best Practices",
    "section": "Develop a Routine",
    "text": "Develop a Routine\nSticking with {renv} will pay off (trust me)\n\nFair play to mix packages from CRAN, GitHub, and proprietary sources\nRoll back when a package upgrade doesn‚Äôt play nicely\nYou make the call when to update your library!"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#a-single-point-app.r",
    "href": "materials/d2-02-dev-practices/index.html#a-single-point-app.r",
    "title": "Development Best Practices",
    "section": "A Single Point: app.R",
    "text": "A Single Point: app.R\nPrototype apps can coast by with a single app.R\n\nMore inputs, visualizations, modules, tabs ‚Ä¶\nEventually the app.R almost explodes\nDifficult to collaborate without conflicts"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#r-directory",
    "href": "materials/d2-02-dev-practices/index.html#r-directory",
    "title": "Development Best Practices",
    "section": "R Directory",
    "text": "R Directory\n\nShiny supports auto-loading scripts in an R directory\nNested directories not supported\nMore information on the App Formats article"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#enter-the-golem",
    "href": "materials/d2-02-dev-practices/index.html#enter-the-golem",
    "title": "Development Best Practices",
    "section": "Enter the {golem}",
    "text": "Enter the {golem}\n\nOpinionated framework for building production-grade Shiny applications as R packages\n\n\nScripts guide you with first steps akin to {usethis} & {devtools}\nEncourages Shiny best practices (especially modules)\nStreamlines deployment on multiple platforms"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#enter-the-rhino",
    "href": "materials/d2-02-dev-practices/index.html#enter-the-rhino",
    "title": "Development Best Practices",
    "section": "Enter the {rhino}",
    "text": "Enter the {rhino}\n\nCreate Shiny apps using software engineering best practices and development tools\n\n\nApp structure inspired by other web app stacks\nAlso encourages Shiny modules\nPre-configured development tools\nRelies on {box} for importing functions\nAutomatic configuration of {renv} for package management"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#a-familiar-strategy",
    "href": "materials/d2-02-dev-practices/index.html#a-familiar-strategy",
    "title": "Development Best Practices",
    "section": "A Familiar Strategy",
    "text": "A Familiar Strategy\n\n\n\n\n#> Error: Can't access reactive value 'x' outside of reactive consumer\n#> ‚Ñπ Do you need to wrap inside reactive() or observer()?\n\n\n#> Error: Unexpected character object for output$greeting\n#> ‚Ñπ Did you forget to use a render function?"
  },
  {
    "objectID": "materials/d2-02-dev-practices/index.html#enter-shinytest2",
    "href": "materials/d2-02-dev-practices/index.html#enter-shinytest2",
    "title": "Development Best Practices",
    "section": "Enter {shinytest2}",
    "text": "Enter {shinytest2}\n\n{shinytest2} provides a streamlined toolkit for unit testing Shiny applications\n\n\nNext generation of {shinytest}\nTightly coupled with {testthat}, used widely in package development\nPowered by {chromote} to render applications in a headless Chrome browser\n\n\n\nshinyprod.com"
  },
  {
    "objectID": "materials/d2-03-rsconnect/index.html#more-to-come",
    "href": "materials/d2-03-rsconnect/index.html#more-to-come",
    "title": "Powerup with RStudio Connect",
    "section": "More to come",
    "text": "More to come\n\n\n\n\n\n\nWarning\n\n\nThese slides are under construction and will be updated continuously until the workshop date.\n\n\n\n\n\nshinyprod.com"
  },
  {
    "objectID": "materials/d2-04-storytime/index.html#more-to-come",
    "href": "materials/d2-04-storytime/index.html#more-to-come",
    "title": "Tales from the Dev Shop",
    "section": "More to come",
    "text": "More to come\n\n\n\n\n\n\nWarning\n\n\nThese slides are under construction and will be updated continuously until the workshop date.\n\n\n\n\n\nshinyprod.com"
  },
  {
    "objectID": "materials/setup-resources/index.html#section-13",
    "href": "materials/setup-resources/index.html#section-13",
    "title": "Workshop Environment Setup",
    "section": "",
    "text": "shinyprod.com"
  },
  {
    "objectID": "resources.html#important-links",
    "href": "resources.html#important-links",
    "title": "Resources for Building Production-Quality Shiny Applications",
    "section": "Important Links",
    "text": "Important Links\n\nRStudio Cloud Workspace: Click to automatically join the RStudio Cloud Project for this workshop\nRStudio Connect: rsc.training.rstudio.com\nGitHub Discussion Board: github.com/rstudio-conf-2022/shiny-prod-apps/discussions\nCollaborate Google Doc: bitl.y/shinynotes\nDiscord channel: #building-production-quality-shiny-applications"
  },
  {
    "objectID": "resources.html#workshop-data-guide",
    "href": "resources.html#workshop-data-guide",
    "title": "Resources for Building Production-Quality Shiny Applications",
    "section": "Workshop Data Guide",
    "text": "Workshop Data Guide\nThroughout this workshop, each of the exercises and live-coding sessions will utilize data from the Metropolitan Museum of Art, otherwise known as the MET, located in New York, United States. The museum offers data sets associated with the art and objects hosted in the museum via their public API. Additional metadata associated with each image of the art piece or object was also generated using the Google Vision API, and in particular the following methods:\n\nLabel detection: Detect and extract information about entities in an image across a broad group of categories.\nObject annotation: Detect and extract information about multiple objects in an image.\nImage properties: Detect color attributes of an image.\nCrop hints: Obtain vertices of a cropped region for an image.\n\n\n\n\n\n\nDataset Filter\n\n\nAll\nart_dict\ncrop_dict\nimage_annotation_dict\nlabel_annotation_dict\nobject_annotation_dict"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Workshop Schedule",
    "section": "",
    "text": "Day 1\nMonday, July 25, 2022\n\n\n\n\n\n\nTime\n\n\nModule\n\n\nPresenter\n\n\n\n\n\n\n9:00 - 9:30\n\n\nWelcome & Setup\n\n\nEric Nantz\n\n\n\n\n9:30 - 10:30\n\n\nReactivity\n\n\nEric Nantz\n\n\n\n\n10:30 - 11:00\n\n\nCoffee & refreshments break\n\n\n\n\n\n\n11:00 - 12:30\n\n\nDesign & User Experience\n\n\nEric Nantz\n\n\n\n\n12:30 - 13:30\n\n\nLunch break\n\n\n\n\n\n\n13:30 - 15:00\n\n\nDatabases & APIs\n\n\nEric Nantz\n\n\n\n\n15:00 - 15:30\n\n\nCoffee & refreshments break\n\n\n\n\n\n\n\n\nNo matching items\n\n\n\n\nDay 2\nTuesday, July 26, 2022\n\n\n\n\n\n\nTime\n\n\nModule\n\n\nPresenter\n\n\n\n\n\n\n9:00 - 10:30\n\n\nAll About Modules\n\n\nEric Nantz\n\n\n\n\n10:30 - 11:00\n\n\nCoffee & refreshments break\n\n\n\n\n\n\n11:00 - 12:30\n\n\nDevelopment Best Practices\n\n\nEric Nantz\n\n\n\n\n12:30 - 13:30\n\n\nLunch Break\n\n\n\n\n\n\n13:30 - 15:00\n\n\nPowerup with RStudio-Connect\n\n\nEric Nantz\n\n\n\n\n15:00 - 15:30\n\n\nCoffee & refreshments break\n\n\n\n\n\n\n15:30 - 17:00\n\n\nTales from the Dev Shop\n\n\nEric Nantz\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Setup",
    "section": "",
    "text": "We are excited to have you join us for our two-day workshop Building Production-Quality Shiny Applications! The format of the workshop will be a mix of presentation slides, example Shiny applications, and hands-on exercises. To ensure you are ready for the journey, please review the following instructions."
  },
  {
    "objectID": "setup.html#pre-work",
    "href": "setup.html#pre-work",
    "title": "Setup",
    "section": "Pre-Work",
    "text": "Pre-Work\nThis workshop will be a blend of teaching materials, live-coding demonstrations, and hands-on exercises to practice key concepts. RStudio has generously provided us access to a dedicated workshop coding environment using RStudio Cloud, which is accessible with a modern web browser such as Google Chrome, Microsoft Edge, Firefox, or others. In addition, RStudio is also providing a dedicated instance of the RStudio Connect platform for hosting Shiny applications that you create and view throughout the workshop.\nIn the first session of the workshop, we will allocate time for everyone to configure their accounts and development environments. If you would like to complete these steps before the workshop, you can follow the procedures detailed in Environment Configuration below."
  },
  {
    "objectID": "setup.html#accounts",
    "href": "setup.html#accounts",
    "title": "Setup",
    "section": "Accounts",
    "text": "Accounts\n\nGitHub account: You can create a GitHub account for free using the instructions provided in the Register for GitHub chapter of Jenny Bryan‚Äôs Happy Git and GitHub for the UseR. If you already have an account, you are welcome to use it for the workshop. While version control itself is not a major focus of the course, we will discuss how certain elements can play an important role in application development and deployment. A great resource for getting a basic familiarity with Git version control is Jenny Bryan‚Äôs Happy Git and GitHub for the useR online book.\nRStudio Cloud account: Visit rstudio.cloud and click the Sign Up link. Then create a Free account. If you already have an account, you do not need to create a new one."
  },
  {
    "objectID": "setup.html#local-clone-of-repository",
    "href": "setup.html#local-clone-of-repository",
    "title": "Setup",
    "section": "Local Clone of Repository",
    "text": "Local Clone of Repository\nIf we encounter any technical issues with the cloud-based environments, it is a good idea to have a clone of this repository on your local laptop as a backup."
  },
  {
    "objectID": "setup.html#environment-configuration",
    "href": "setup.html#environment-configuration",
    "title": "Setup",
    "section": "Environment Configuration",
    "text": "Environment Configuration\nPlease view the information in the callouts below for step-by-step instructions on configuring your accounts and environments. While RStudio Cloud is the preferred development environment, you may utilize your local installation of R and RStudio if you prefer.\n\n\n\n\n\n\nRStudio Connect\n\n\n\n\n\nView screenshots in full screen\n\n\nCreate an account on the workshop RStudio Connect server by visiting https://rsc.training.rstudio.com and clicking the login link in the upper right corner.\nYou will see a window that asks for either an email/password or to use a GitHub account. Please choose the GitHub option and follow the instructions to authorize RStudio Connect to your GitHub account.\nYou should now be logged in to RStudio Connect. Please create an API key for your account by following the RStudio Connect User Guide instructions on creasting an API key. Save it to a secure place as you will need it for account integration.\n\n\n\n\n\n\n\n\n\n\nRStudio Cloud\n\n\n\n\n\nView screenshots in full screen\n\n\nJoin the RStudio Cloud Workspace dedicated to this workshop by visiting this customized invitation URL. If you already have an RStudio Cloud account, you are welcome to use it for the workshop. Otherwise, you can create a new account for free.\nYou will see a project called shiny-prod-apps. Open that project and create a saved copy. This process could take a couple of minutes depending on server load.\nAfter the project loads, you will see messages in the R console about restoring or repairing the package library. Execute renv::restore(prompt = FALSE) to install packages into the project. This process should complete in one or two minutes.\n\n\n\n\n\n\n\n\n\n\nLocal R & RStudio\n\n\n\n\n\nIf you prefer to use a local installation of R and RStudio, ensure you setup meets the following requirements:\n\nR version 4.1 or later\nLatest released version of RStudio, v2022.07.0-548 or later\nThe {renv} package.\n\n\n\n\n\n\n\n\n\n\nAccount Integration\n\n\n\n\n\nView screenshots in full screen\n\n\nNavigate back to your RStudio Project created earlier. Create a new file called .Renviron withing your project directory by running the following in the R Console: usethis::edit_r_environ(scope = \"project\")\nInside the .Renviron file, add the RStudio Connect URL and your account API key using the following format (substitute values as appropriate)\n\nCONNECT_SERVER=https://rsc.training.rstudio.com\nCONNECT_API_KEY=abcdefghijklmnopqrstuvwxyz\n\nLink your RStudio Connect account to RStudio by going to Tools -> Global Options -> Publishing and click Connect to follow the prompts.\nRestart your R session by going to Session -> Restart R inside RStudio. Verify that your environment variables were successfully registered by printing them into your R console with the following commands:\n\nSys.getenv(\"CONNECT_SERVER\")\nSys.getenv(\"CONNECT_API_KEY\")"
  },
  {
    "objectID": "units/d1-01-welcome.html",
    "href": "units/d1-01-welcome.html",
    "title": "Welcome & Setup",
    "section": "",
    "text": "View slides in full screen"
  },
  {
    "objectID": "units/d1-01-welcome.html#exercises",
    "href": "units/d1-01-welcome.html#exercises",
    "title": "Welcome & Setup",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nExercise\n\n\nTitle\n\n\n\n\n\n\nExercise 0\n\n\nApplication Deployment using {shinyprod}\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "units/d1-02-reactivity.html",
    "href": "units/d1-02-reactivity.html",
    "title": "Reactivity",
    "section": "",
    "text": "Warning\n\n\n\nThis page is under construction and will be updated continuously until the workshop date."
  },
  {
    "objectID": "units/d1-02-reactivity.html#outline",
    "href": "units/d1-02-reactivity.html#outline",
    "title": "Reactivity",
    "section": "Outline",
    "text": "Outline"
  },
  {
    "objectID": "units/d1-02-reactivity.html#slides",
    "href": "units/d1-02-reactivity.html#slides",
    "title": "Reactivity",
    "section": "Slides",
    "text": "Slides\nView slides in full screen"
  },
  {
    "objectID": "units/d1-02-reactivity.html#code-along-examples",
    "href": "units/d1-02-reactivity.html#code-along-examples",
    "title": "Reactivity",
    "section": "Code-Along Examples",
    "text": "Code-Along Examples\n\n\n\n\n\n\nCode-Along\n\n\nTitle\n\n\n\n\n\n\nReactivity Code-Along 1\n\n\nBuilding the Image Viewer\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "units/d1-02-reactivity.html#exercises",
    "href": "units/d1-02-reactivity.html#exercises",
    "title": "Reactivity",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nExercise\n\n\nTitle\n\n\n\n\n\n\nExercise 1\n\n\nReactivity Enhancement\n\n\n\n\nExercise 2\n\n\nMultiple Controls\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "units/d1-02b-break.html",
    "href": "units/d1-02b-break.html",
    "title": "Coffee & refreshments break",
    "section": "",
    "text": "It‚Äôs time for a well-deserved break! Coffee and refreshments are served at Concourse. If you have any questions during the break, please discuss with the workshop instructor or a workshop TA."
  },
  {
    "objectID": "units/d1-03-design-ux.html",
    "href": "units/d1-03-design-ux.html",
    "title": "Design & User Experience",
    "section": "",
    "text": "View slides in full screen"
  },
  {
    "objectID": "units/d1-03-design-ux.html#code-along-examples",
    "href": "units/d1-03-design-ux.html#code-along-examples",
    "title": "Design & User Experience",
    "section": "Code-Along Examples",
    "text": "Code-Along Examples\n\n\n\n\n\n\nCode-Along\n\n\nTitle\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "units/d1-03-design-ux.html#exercises",
    "href": "units/d1-03-design-ux.html#exercises",
    "title": "Design & User Experience",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nExercise\n\n\nTitle\n\n\n\n\n\n\nExercise 1\n\n\nStyling the Art Image Viewer (Part 1)\n\n\n\n\nExercise 2\n\n\nStyling the Art Image Viewer (Part 2)\n\n\n\n\nExercise 3\n\n\nExtending the Art Viewer UX\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "units/d1-03b-lunch.html",
    "href": "units/d1-03b-lunch.html",
    "title": "Lunch break",
    "section": "",
    "text": "Write one positive thing such as a new technique/capability you learned on a green sticky note\nWrite one item that could use improvement, such as a topic going too fast or not clear enough on a pink sticky note.\n\nYour workshop team is also using this time to re-charge. If you have any questions, please wait to ask until we re-convene for the next unit."
  },
  {
    "objectID": "units/d1-04-db-api.html",
    "href": "units/d1-04-db-api.html",
    "title": "Databases & APIs",
    "section": "",
    "text": "View slides in full screen"
  },
  {
    "objectID": "units/d1-04-db-api.html#code-along-examples",
    "href": "units/d1-04-db-api.html#code-along-examples",
    "title": "Databases & APIs",
    "section": "Code-Along Examples",
    "text": "Code-Along Examples\n\n\n\n\n\n\nCode-Along\n\n\nTitle\n\n\n\n\n\n\nAPI Code-Along 1\n\n\nCaling a RESTful API from R\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "units/d1-04-db-api.html#exercises",
    "href": "units/d1-04-db-api.html#exercises",
    "title": "Databases & APIs",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nExercise\n\n\nTitle\n\n\n\n\n\n\nExercise 1\n\n\nDatabase within the Art Viewer\n\n\n\n\nExercise 3\n\n\nUsing APIs within the Art Viewer\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "units/d1-04b-break.html",
    "href": "units/d1-04b-break.html",
    "title": "Coffee & refreshments break",
    "section": "",
    "text": "It‚Äôs time for a well-deserved break! Coffee and refreshments are served at Concourse. If you have any questions during the break, please discuss with the workshop instructor or a workshop TA."
  },
  {
    "objectID": "units/d2-01-modules.html",
    "href": "units/d2-01-modules.html",
    "title": "All About Modules",
    "section": "",
    "text": "View slides in full screen"
  },
  {
    "objectID": "units/d2-01-modules.html#code-along-examples",
    "href": "units/d2-01-modules.html#code-along-examples",
    "title": "All About Modules",
    "section": "Code-Along Examples",
    "text": "Code-Along Examples\n\n\n\n\n\n\nCode-Along\n\n\nTitle\n\n\n\n\n\n\nModules Code-Along 1\n\n\nA Modularized Art Image Viewer\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "units/d2-01-modules.html#exercises",
    "href": "units/d2-01-modules.html#exercises",
    "title": "All About Modules",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nExercise\n\n\nTitle\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "units/d2-01b-break.html",
    "href": "units/d2-01b-break.html",
    "title": "Coffee & refreshments break",
    "section": "",
    "text": "It‚Äôs time for a well-deserved break! Coffee and refreshments are served at Concourse. If you have any questions during the break, please discuss with the workshop instructor or a workshop TA."
  },
  {
    "objectID": "units/d2-02-dev-practices.html",
    "href": "units/d2-02-dev-practices.html",
    "title": "Development Best Practices",
    "section": "",
    "text": "View slides in full screen"
  },
  {
    "objectID": "units/d2-02-dev-practices.html#code-along-examples",
    "href": "units/d2-02-dev-practices.html#code-along-examples",
    "title": "Development Best Practices",
    "section": "Code-Along Examples",
    "text": "Code-Along Examples\n\n\n\n\n\n\nCode-Along\n\n\nTitle\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "units/d2-02-dev-practices.html#exercises",
    "href": "units/d2-02-dev-practices.html#exercises",
    "title": "Development Best Practices",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nExercise\n\n\nTitle\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "units/d2-02b-lunch.html",
    "href": "units/d2-02b-lunch.html",
    "title": "Lunch Break",
    "section": "",
    "text": "Write one positive thing such as a new technique/capability you learned on a green sticky note\nWrite one item that could use improvement, such as a topic going too fast or not clear enough on a pink sticky note.\n\nYour workshop team is also using this time to re-charge. If you have any questions, please wait to ask until we re-convene for the next unit."
  },
  {
    "objectID": "units/d2-03-rsconnect.html",
    "href": "units/d2-03-rsconnect.html",
    "title": "Powerup with RStudio-Connect",
    "section": "",
    "text": "Warning\n\n\n\nThis page is under construction and will be updated continuously until the workshop date."
  },
  {
    "objectID": "units/d2-03-rsconnect.html#outline",
    "href": "units/d2-03-rsconnect.html#outline",
    "title": "Powerup with RStudio-Connect",
    "section": "Outline",
    "text": "Outline"
  },
  {
    "objectID": "units/d2-03-rsconnect.html#slides",
    "href": "units/d2-03-rsconnect.html#slides",
    "title": "Powerup with RStudio-Connect",
    "section": "Slides",
    "text": "Slides\nView slides in full screen"
  },
  {
    "objectID": "units/d2-03-rsconnect.html#exercises",
    "href": "units/d2-03-rsconnect.html#exercises",
    "title": "Powerup with RStudio-Connect",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nExercise\n\n\nTitle\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "units/d2-03b-break.html",
    "href": "units/d2-03b-break.html",
    "title": "Coffee & refreshments break",
    "section": "",
    "text": "It‚Äôs time for a well-deserved break! Coffee and refreshments are served at Concourse. If you have any questions during the break, please discuss with the workshop instructor or a workshop TA."
  },
  {
    "objectID": "units/d2-04-storytime.html",
    "href": "units/d2-04-storytime.html",
    "title": "Tales from the Dev Shop",
    "section": "",
    "text": "Warning\n\n\n\nThis page is under construction and will be updated continuously until the workshop date."
  },
  {
    "objectID": "units/d2-04-storytime.html#outline",
    "href": "units/d2-04-storytime.html#outline",
    "title": "Tales from the Dev Shop",
    "section": "Outline",
    "text": "Outline"
  },
  {
    "objectID": "units/d2-04-storytime.html#slides",
    "href": "units/d2-04-storytime.html#slides",
    "title": "Tales from the Dev Shop",
    "section": "Slides",
    "text": "Slides\nView slides in full screen"
  },
  {
    "objectID": "units/d2-04-storytime.html#exercises",
    "href": "units/d2-04-storytime.html#exercises",
    "title": "Tales from the Dev Shop",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nExercise\n\n\nTitle\n\n\n\n\n\n\n\n\nNo matching items"
  }
]